version: '3.4'

networks:
  common-network:
    

volumes:
  weaviate_data:
  minio_data:

services:
  weaviate:
    image: cr.weaviate.io/semitechnologies/weaviate:1.25.4
    command:
      - --host
      - 0.0.0.0
      - --port
      - '8080'
      - --scheme
      - http
    ports:
      - 9000:8080
      - 50051:50051
    # volumes:
    #   - weaviate_data:/var/lib/weaviate
    restart: on-failure:0
    environment:
      QUERY_DEFAULTS_LIMIT: 10000
      QUERY_MAXIMUM_RESULTS: 100000
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'
      PERSISTENCE_DATA_PATH: /var/lib/weaviate
      DEFAULT_VECTORIZER_MODULE: 'none'
      CLUSTER_HOSTNAME: 'node1'
    networks:
      - common-network

  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9002:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_DEFAULT_BUCKETS: ${MINIO_DEFAULT_BUCKETS}
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    restart: on-failure:0
    networks:
      - common-network

  vector_db_interface:
    container_name: vector-db-interface
    build:
      context: ./vector_db_interface
    env_file: .env
    volumes:
      - ./logs/vector_db_interface.log:/app/vector_db_interface.log
    ports:
      - "50053:50051"
    depends_on:
      - "weaviate"
    restart: always
    networks:
      - common-network

  nginx:
    image: nginx:latest
    ports:
      - "8081:8080"  # Expose nginx on port 8080 of the host
      - "19000:19000"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro  # Mount custom nginx configuration
    restart: always
    networks:
    - common-network
